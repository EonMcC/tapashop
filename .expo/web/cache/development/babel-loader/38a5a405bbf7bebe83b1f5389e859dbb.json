{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/user/coding/tapashop/components/FoodCard.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar FoodCard = function FoodCard(_ref) {\n  var food = _ref.food,\n      toggleToGet = _ref.toggleToGet,\n      showBasketBtn = _ref.showBasketBtn;\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      rerender = _useState2[0],\n      setRerender = _useState2[1];\n\n  var handleToggleToGet = function handleToggleToGet() {\n    toggleToGet(food);\n    setRerender(rerender + 1);\n  };\n\n  var cardDisplay = function cardDisplay() {\n    if (showBasketBtn) {\n      return React.createElement(View, {\n        style: food.toGet ? styles.cardCheck : styles.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: handleToggleToGet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.cardText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, food.name)), React.createElement(Button, {\n        title: \"+\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return React.createElement(View, {\n        style: food.toGet ? styles.cardCheck : styles.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: handleToggleToGet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.cardText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, food.name)));\n    }\n  };\n\n  return cardDisplay();\n};\n\nvar styles = StyleSheet.create({\n  card: {\n    borderColor: \"grey\",\n    width: 300,\n    borderWidth: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 10,\n    margin: 5,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  cardCheck: {\n    borderColor: \"green\",\n    width: 300,\n    borderWidth: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 10,\n    margin: 5,\n    opacity: 0.5,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  cardText: {\n    fontSize: 20\n  }\n});\nexport default FoodCard;","map":{"version":3,"sources":["/Users/user/coding/tapashop/components/FoodCard.js"],"names":["React","useState","FoodCard","food","toggleToGet","showBasketBtn","rerender","setRerender","handleToggleToGet","cardDisplay","toGet","styles","cardCheck","card","cardText","name","StyleSheet","create","borderColor","width","borderWidth","justifyContent","alignItems","padding","margin","flexDirection","opacity","fontSize"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AASA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA0C;AAAA,MAAvCC,IAAuC,QAAvCA,IAAuC;AAAA,MAAjCC,WAAiC,QAAjCA,WAAiC;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;;AAAA,kBACzBJ,QAAQ,CAAC,CAAD,CADiB;AAAA;AAAA,MAClDK,QADkD;AAAA,MACxCC,WADwC;;AAGzD,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BJ,IAAAA,WAAW,CAACD,IAAD,CAAX;AACAI,IAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AACD,GAHD;;AAKA,MAAMG,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIJ,aAAJ,EAAmB;AACjB,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,IAAI,CAACO,KAAL,GAAaC,MAAM,CAACC,SAApB,GAAgCD,MAAM,CAACE,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,kBAAD;AAAoB,QAAA,OAAO,EAAEL,iBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEG,MAAM,CAACG,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BX,IAAI,CAACY,IAApC,CADF,CADF,EAIE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAQD,KATD,MASO;AACL,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEZ,IAAI,CAACO,KAAL,GAAaC,MAAM,CAACC,SAApB,GAAgCD,MAAM,CAACE,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,kBAAD;AAAoB,QAAA,OAAO,EAAEL,iBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEG,MAAM,CAACG,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BX,IAAI,CAACY,IAApC,CADF,CADF,CADF;AAOD;AACF,GAnBD;;AAqBA,SAAON,WAAW,EAAlB;AACD,CA9BD;;AAgCA,IAAME,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,IAAI,EAAE;AACJK,IAAAA,WAAW,EAAE,MADT;AAEJC,IAAAA,KAAK,EAAE,GAFH;AAGJC,IAAAA,WAAW,EAAE,CAHT;AAIJC,IAAAA,cAAc,EAAE,QAJZ;AAKJC,IAAAA,UAAU,EAAE,QALR;AAMJC,IAAAA,OAAO,EAAE,EANL;AAOJC,IAAAA,MAAM,EAAE,CAPJ;AAQJC,IAAAA,aAAa,EAAE,KARX;AASJJ,IAAAA,cAAc,EAAE;AATZ,GADyB;AAY/BT,EAAAA,SAAS,EAAE;AACTM,IAAAA,WAAW,EAAE,OADJ;AAETC,IAAAA,KAAK,EAAE,GAFE;AAGTC,IAAAA,WAAW,EAAE,CAHJ;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTC,IAAAA,UAAU,EAAE,QALH;AAMTC,IAAAA,OAAO,EAAE,EANA;AAOTC,IAAAA,MAAM,EAAE,CAPC;AAQTE,IAAAA,OAAO,EAAE,GARA;AASTD,IAAAA,aAAa,EAAE,KATN;AAUTJ,IAAAA,cAAc,EAAE;AAVP,GAZoB;AAwB/BP,EAAAA,QAAQ,EAAE;AACRa,IAAAA,QAAQ,EAAE;AADF;AAxBqB,CAAlB,CAAf;AA6BA,eAAezB,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableHighlight,\n  Button,\n} from \"react-native\";\n\nconst FoodCard = ({ food, toggleToGet, showBasketBtn }) => {\n  const [rerender, setRerender] = useState(1);\n\n  const handleToggleToGet = () => {\n    toggleToGet(food);\n    setRerender(rerender + 1);\n  };\n\n  const cardDisplay = () => {\n    if (showBasketBtn) {\n      return (\n        <View style={food.toGet ? styles.cardCheck : styles.card}>\n          <TouchableHighlight onPress={handleToggleToGet}>\n            <Text style={styles.cardText}>{food.name}</Text>\n          </TouchableHighlight>\n          <Button title=\"+\" />\n        </View>\n      );\n    } else {\n      return (\n        <View style={food.toGet ? styles.cardCheck : styles.card}>\n          <TouchableHighlight onPress={handleToggleToGet}>\n            <Text style={styles.cardText}>{food.name}</Text>\n          </TouchableHighlight>\n        </View>\n      );\n    }\n  };\n\n  return cardDisplay();\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    borderColor: \"grey\",\n    width: 300,\n    borderWidth: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 10,\n    margin: 5,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  cardCheck: {\n    borderColor: \"green\",\n    width: 300,\n    borderWidth: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 10,\n    margin: 5,\n    opacity: 0.5,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  cardText: {\n    fontSize: 20,\n  },\n});\n\nexport default FoodCard;\n"]},"metadata":{},"sourceType":"module"}