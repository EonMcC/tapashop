{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/user/coding/tapashop/components/Test.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\nimport { getCurrentFrame } from \"expo/build/AR\";\nimport FoodCard from \"./FoodCard\";\nvar allFood = [{\n  name: \"Apples\",\n  toGet: false,\n  inBasket: false\n}, {\n  name: \"Tofu\",\n  toGet: true,\n  inBasket: true\n}, {\n  name: \"Milk, Oat\",\n  toGet: true,\n  inBasket: false\n}];\nvar exampleData = allFood.map(function (d, index) {\n  return {\n    key: \"item-\" + index,\n    label: d.name,\n    backgroundColor: \"green\",\n    margin: 10\n  };\n});\n\nvar Test = function (_Component) {\n  _inherits(Test, _Component);\n\n  var _super = _createSuper(Test);\n\n  function Test() {\n    var _this;\n\n    _classCallCheck(this, Test);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: exampleData\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index,\n          drag = _ref.drag,\n          isActive = _ref.isActive;\n      return React.createElement(FoodCard, {\n        style: {\n          height: 100,\n          borderColor: \"black\",\n          borderWidth: 2,\n          backgroundColor: isActive ? \"green\" : item.backgroundColor,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          margin: 10\n        },\n        onLongPress: drag,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\",\n          color: \"white\",\n          fontSize: 32\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, item.label));\n    };\n\n    return _this;\n  }\n\n  _createClass(Test, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          borderColor: \"black\",\n          borderWidth: 2,\n          margin: 10,\n          marginTop: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      }, React.createElement(DraggableFlatList, {\n        data: this.state.data,\n        renderItem: this.renderItem,\n        keyExtractor: function keyExtractor(item, index) {\n          return \"draggable-item-\" + item.key;\n        },\n        onDragEnd: function onDragEnd(_ref2) {\n          var data = _ref2.data;\n          return _this2.setState({\n            data: data\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Test;\n}(Component);\n\nexport default Test;","map":{"version":3,"sources":["/Users/user/coding/tapashop/components/Test.js"],"names":["React","Component","DraggableFlatList","getCurrentFrame","FoodCard","allFood","name","toGet","inBasket","exampleData","map","d","index","key","label","backgroundColor","margin","Test","state","data","renderItem","item","drag","isActive","height","borderColor","borderWidth","alignItems","justifyContent","fontWeight","color","fontSize","flex","marginTop","setState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { View, TouchableOpacity, Text } from \"react-native\";\nimport DraggableFlatList from \"react-native-draggable-flatlist\";\nimport { getCurrentFrame } from \"expo/build/AR\";\nimport FoodCard from \"./FoodCard\";\n\nconst allFood = [\n  { name: \"Apples\", toGet: false, inBasket: false },\n  { name: \"Tofu\", toGet: true, inBasket: true },\n  { name: \"Milk, Oat\", toGet: true, inBasket: false },\n];\n\nconst exampleData = allFood.map((d, index) => ({\n  key: `item-${index}`,\n  label: d.name,\n  backgroundColor: \"green\",\n  margin: 10,\n}));\n\nclass Test extends Component {\n  state = {\n    data: exampleData,\n  };\n\n  renderItem = ({ item, index, drag, isActive }) => {\n    return (\n      <FoodCard\n        style={{\n          height: 100,\n          borderColor: \"black\",\n          borderWidth: 2,\n          backgroundColor: isActive ? \"green\" : item.backgroundColor,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          margin: 10,\n        }}\n        onLongPress={drag}\n      >\n        <Text\n          style={{\n            fontWeight: \"bold\",\n            color: \"white\",\n            fontSize: 32,\n          }}\n        >\n          {item.label}\n        </Text>\n      </FoodCard>\n    );\n  };\n\n  render() {\n    return (\n      <View\n        style={{\n          flex: 1,\n          borderColor: \"black\",\n          borderWidth: 2,\n          margin: 10,\n          marginTop: 50,\n        }}\n      >\n        <DraggableFlatList\n          data={this.state.data}\n          renderItem={this.renderItem}\n          keyExtractor={(item, index) => `draggable-item-${item.key}`}\n          onDragEnd={({ data }) => this.setState({ data })}\n        />\n      </View>\n    );\n  }\n}\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}