{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/user/coding/tapashop/App.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AllFoodCont from \"./containers/AllFoodCont\";\nimport ToGetCont from \"./containers/ToGetCont\";\nimport InBasketCont from \"./containers/InBasketCont\";\nimport Swiper from \"react-native-swiper\";\nexport default function App() {\n  var _useState = useState([{\n    name: \"Apples\",\n    toGet: false,\n    inBasket: false\n  }, {\n    name: \"Tofu\",\n    toGet: true,\n    inBasket: true\n  }, {\n    name: \"Milk, Oat\",\n    toGet: true,\n    inBasket: false\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      allFood = _useState2[0],\n      setAllFood = _useState2[1];\n\n  var addFood = function addFood(name) {\n    var newFood = {\n      name: name,\n      toGet: false,\n      inBasket: false\n    };\n    setAllFood([].concat(_toConsumableArray(allFood), [newFood]));\n  };\n\n  var toggleToGet = function toggleToGet(food) {\n    var allFoodCopy = _toConsumableArray(allFood);\n\n    for (var i in allFoodCopy) {\n      if (allFoodCopy[i].name === food.name) {\n        allFoodCopy[i].toGet = !allFood[i].toGet;\n\n        if (allFoodCopy[i].inBasket) {\n          allFoodCopy[i].inBasket = false;\n        }\n\n        setAllFood(allFoodCopy);\n      }\n    }\n  };\n\n  var toggleBasket = function toggleBasket(food) {\n    var allFoodCopy = _toConsumableArray(allFood);\n\n    for (var i in allFoodCopy) {\n      if (allFoodCopy[i].name === food.name) {\n        allFoodCopy[i].inBasket = !allFood[i].inBasket;\n        setAllFood(allFoodCopy);\n      }\n    }\n  };\n\n  return React.createElement(Swiper, {\n    loop: false,\n    showsPagination: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(AllFoodCont, {\n    allFood: allFood,\n    toggleToGet: toggleToGet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), React.createElement(ToGetCont, {\n    allFood: allFood,\n    toggleToGet: toggleToGet,\n    toggleBasket: toggleBasket,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), React.createElement(InBasketCont, {\n    allFood: allFood,\n    toggleBasket: toggleBasket,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/Users/user/coding/tapashop/App.js"],"names":["React","useState","AllFoodCont","ToGetCont","InBasketCont","Swiper","App","name","toGet","inBasket","allFood","setAllFood","addFood","newFood","toggleToGet","food","allFoodCopy","i","toggleBasket","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport AllFoodCont from \"./containers/AllFoodCont\";\nimport ToGetCont from \"./containers/ToGetCont\";\nimport InBasketCont from \"./containers/InBasketCont\";\nimport Swiper from \"react-native-swiper\";\n\nexport default function App() {\n  const [allFood, setAllFood] = useState([\n    { name: \"Apples\", toGet: false, inBasket: false },\n    { name: \"Tofu\", toGet: true, inBasket: true },\n    { name: \"Milk, Oat\", toGet: true, inBasket: false },\n  ]);\n\n  const addFood = (name) => {\n    const newFood = { name: name, toGet: false, inBasket: false };\n    setAllFood([...allFood, newFood]);\n  };\n\n  const toggleToGet = (food) => {\n    const allFoodCopy = [...allFood];\n    for (let i in allFoodCopy) {\n      if (allFoodCopy[i].name === food.name) {\n        allFoodCopy[i].toGet = !allFood[i].toGet;\n        if (allFoodCopy[i].inBasket) {\n          allFoodCopy[i].inBasket = false;\n        }\n        setAllFood(allFoodCopy);\n      }\n    }\n  };\n\n  const toggleBasket = (food) => {\n    const allFoodCopy = [...allFood];\n    for (let i in allFoodCopy) {\n      if (allFoodCopy[i].name === food.name) {\n        allFoodCopy[i].inBasket = !allFood[i].inBasket;\n        setAllFood(allFoodCopy);\n      }\n    }\n  };\n\n  return (\n    <Swiper loop={false} showsPagination={false}>\n      <AllFoodCont allFood={allFood} toggleToGet={toggleToGet}></AllFoodCont>\n      <ToGetCont\n        allFood={allFood}\n        toggleToGet={toggleToGet}\n        toggleBasket={toggleBasket}\n      ></ToGetCont>\n      <InBasketCont\n        allFood={allFood}\n        toggleBasket={toggleBasket}\n      ></InBasketCont>\n    </Swiper>\n  );\n}\n\nconst styles = StyleSheet.create({});\n"]},"metadata":{},"sourceType":"module"}